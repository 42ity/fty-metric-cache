################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
program_libs = src/libagent_rt.la ${project_libs}

# Programs need to link the c++ runtime if everything was compiled statically.
if !ENABLE_SHARED
program_libs += -lstdc++ -lm
endif

lib_LTLIBRARIES += src/libagent_rt.la
pkgconfig_DATA = src/libagent_rt.pc

include_HEADERS = \
    include/agent_rt.h \
    include/bios_agent_rt_server.h \
    include/agent_rt_library.h

src_libagent_rt_la_SOURCES = \
    src/logger.c \
    src/actor_commands.c \
    src/rt.c \
    src/bios_agent_rt_server.c \
    src/platform.h

src_libagent_rt_la_CPPFLAGS = ${AM_CPPFLAGS}

src_libagent_rt_la_LDFLAGS = \
    -version-info @LTVER@ \
    $(LIBTOOL_EXTRA_LDFLAGS)

if ON_MINGW
src_libagent_rt_la_LDFLAGS += \
    -no-undefined \
    -avoid-version
endif

if ON_CYGWIN
src_libagent_rt_la_LDFLAGS += \
    -no-undefined \
    -avoid-version
endif

src_libagent_rt_la_LIBADD = ${project_libs}

if ENABLE_BIOS_AGENT_RT
bin_PROGRAMS += src/bios-agent-rt
src_bios_agent_rt_CPPFLAGS = ${AM_CPPFLAGS}
src_bios_agent_rt_LDADD = ${program_libs}
src_bios_agent_rt_SOURCES = src/bios_agent_rt.c
src_bios_agent_rt_config_DATA = src/bios-agent-rt.cfg
src_bios_agent_rt_configdir = $(sysconfdir)/agent-rt
if WITH_SYSTEMD_UNITS
src_bios_agent_rt_servicedir = @prefix@/lib/systemd/system
src_bios_agent_rt_service_DATA = src/bios-agent-rt.service
endif #WITH_SYSTEMD_UNITS
endif #ENABLE_BIOS_AGENT_RT

if ENABLE_AGENT_RT_SELFTEST
check_PROGRAMS += src/agent_rt_selftest
noinst_PROGRAMS += src/agent_rt_selftest
src_agent_rt_selftest_CPPFLAGS = ${AM_CPPFLAGS}
src_agent_rt_selftest_LDADD = ${program_libs}
src_agent_rt_selftest_SOURCES = src/agent_rt_selftest.c
endif #ENABLE_AGENT_RT_SELFTEST

# define custom target for all products of /src
src:
	src/bios-agent-rt \
	src/agent_rt_selftest \
	src/libagent_rt.la

	cd $(srcdir); gsl -target:- project.xml

check-local: src/agent_rt_selftest
	$(LIBTOOL) --mode=execute $(srcdir)/src/agent_rt_selftest

check-verbose: src/agent_rt_selftest
	$(LIBTOOL) --mode=execute $(srcdir)/src/agent_rt_selftest -v

# Run the selftest binary under valgrind to check for memory leaks
memcheck: src/agent_rt_selftest
	$(LIBTOOL) --mode=execute valgrind --tool=memcheck \
		--leak-check=full --show-reachable=yes --error-exitcode=1 \
		--suppressions=$(srcdir)/src/.valgrind.supp \
		$(srcdir)/src/agent_rt_selftest

# Run the selftest binary under valgrind to check for performance leaks
callcheck: src/agent_rt_selftest
	$(LIBTOOL) --mode=execute valgrind --tool=callgrind \
		$(srcdir)/src/agent_rt_selftest

# Run the selftest binary under gdb for debugging
debug: src/agent_rt_selftest
	$(LIBTOOL) --mode=execute gdb -q \
		$(srcdir)/src/agent_rt_selftest

# Run the selftest binary with verbose switch for tracing
animate: src/agent_rt_selftest
	$(LIBTOOL) --mode=execute $(srcdir)/src/agent_rt_selftest -v

if WITH_GCOV
coverage: src/agent_rt_selftest
	@echo "called configure --with-gcov"
	lcov --base-directory . --directory . --zerocounters -q
	$(MAKE) check
	lcov --base-directory . --directory . --capture -o coverage.info
	lcov --remove coverage.info "/usr*" -o coverage.info
	lcov --remove coverage.info "agent_rt_selftest.c" -o coverage.info
	$(RM) -rf coverage/*
	genhtml -o coverage/ -t "agent-rt test coverage" --num-spaces 4 coverage.info
else
coverage: src/agent_rt_selftest
	@echo "call make clean && configure --with-gcov to enable code coverage"
	@exit 1
endif

################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
